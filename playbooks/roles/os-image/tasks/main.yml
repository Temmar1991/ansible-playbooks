---
  - name: Get image name
    set_fact:
      os_image_file_name: "{{ os_image_url|basename }}"

  - name: View image name
    debug: msg="Image name is {{ os_image_file_name }}"

  - name: Check if image file already exists
    stat:
      path: "{{ os_image_file_path }}/{{ os_image_file_name }}"
    register: os_image_file_name_status

  - name: View image file status
    debug: msg="Image file already exists in {{ os_image_file_path }}/{{ os_image_file_name }}. Skipping downloading."
    when: "os_image_file_name_status.stat.exists != False"

  - name: Download image for glance
    get_url:
      url: "{{ os_image_url }}"
      dest: "{{ os_image_file_path }}"
    when: "os_image_file_name_status.stat.exists == False"

  - name: Check if image alredy in glance
    shell: "source {{ os_client_script }} && openstack image list -f value -c Name | grep -w '^{{ os_image_name }}$' | wc -l"
    register: os_image_glance_status
    args:
      executable: /bin/bash

  - name: View image status in glance
    debug: msg="Image file already exists in glance. Skipping uploading."
    when: "os_image_glance_status.stdout|int != 0"

  - name: Upload image to glance
    shell: "source {{ os_client_script }} && openstack image create {{ os_image_name }} --file {{ os_image_file_path }}/{{ os_image_file_name }} --disk-format qcow2 --container-format bare"
    when: "os_image_glance_status.stdout|int == 0"
    args:
      executable: /bin/bash

  - name: Check upload status of image in glance
    shell: "source {{ os_client_script }} && openstack image list -f value -c Name -c Status | grep -w '^{{ os_image_name }}' | awk '{ print $2 }'"
    register: os_image_status
    until: "'active' in os_image_status.stdout"
    retries: 10
    args:
      executable: /bin/bash

